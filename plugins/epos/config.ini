[Generic]
endpoint=https://ics-c.epos-ip.org/development/k8s-epos-deploy/dt-geo/api/v1

[epos]
# Mapping between plugin terms and standard terms (see main config.ini for the latter)
terms_map = {
    'Data Identifier': ['identifiers','relatedDataProducts'],
    'Metadata Identifier': ['id',''],
    'Format': ['availableFormats',''],
    'Temporal Coverage': ['startDate', 'serviceTemporalCoverage'],
    'Spatial Coverage': ['paths', 'serviceSpatial'],
    'License': ['license', ''],
    'Person Identifier': ['contactPoints','relatedDataProducts'],
    'Organisation Identifier': ['dataProvider','relatedDataProducts'],
    'Title': ['title',''],
    'Description': ['description',''],
    'Type': ['type','relatedDataProducts'],
    'Keywords': ['keywords',''],
    'Paths': [],
    'Download Link': ['downloadURL',''],
    'Version': ['version','relatedDataProducts'],
    'Security': [['securityConstraints',''], ['securityDataStorage',''], ['securityDataTransfer','']],
    'Privacy': ['privacy',''],
    'Data connection': ['relation'],
    'Data Quality': ['hasQualityAnnotation',''],
    'Provenance': ['curationAndProvenanceObligations','']}

# (meta)data terms to find the resource identifier
identifier_term = ['Metadata Identifier']
identifier_term_data = ['Data Identifier']

# Metadata terms to check richness (generic). These terms should be included [term, qualifier]. None means no qualifier
# terms_quali_generic = [['paths', 'serviceSpatial'],
#                        ['startDate', 'serviceTemporalCoverage'],
#                        ['serviceDescription', None],
#                        ['hasQualityAnnotation', None],
#                        ['dataProvider', None],
#                        ['license', None],
#                        ['title', None],
#                        ['keywords', None]]
terms_quali_generic = ['Spatial Coverage', 'Temporal Coverage', 'Description', 'Data Quality', 'Organisation Identifier', 'License', 'Title', 'Keywords']

# Metadata terms to check richness (disciplinar). These terms should be included [term, qualifier]
# terms_quali_disciplinar = [['paths', 'serviceSpatial'],
#                            ['startDate', 'serviceTemporalCoverage'],
#                            ['serviceDescription', None],
#                            ['hasQualityAnnotation', None],
#                            ['dataProvider', None],
#                            ['license', None],
#                            ['title', None],
#                            ['keywords', None]]
terms_quali_disciplinar = ['Spatial Coverage', 'Termporal Coverage', 'Description', 'Data Quality', 'Organisation Identifier', 'License', 'Title', 'Keywords']

# Metadata terms that defines accessibility (case sensitive)
# terms_access = [['downloadURL', None],
#                 ['identifiers','relatedDataProducts'],
#                 ['license', ''],
#                 ['temporalCoverage', 'relatedDataProducts']]
terms_access = ['Download Link', 'Data Identifier', 'License', 'Termporal Coverage']

# Metadata terms to check discoverability richness.
# terms_findability_richness = [['title',''],
#                               ['keywords',''],
#                               ['description',''],
#                               ['type','relatedDataProducts'],
#                               ['type','relatedDataProducts'],
#                               ['paths', 'spatial'],
#                               ['temporalCoverage','relatedDataProducts'],
#                               ['dataProvider','relatedDataProducts'],
#                               ['license',''],
#                               ['availableFormats',''],
#                               ['identifiers','relatedDataProducts']]
terms_findability_richness = ['Title', 'Keywords', 'Description', 'Type', 'Temporal Coverage', 'Spatial Coverage', 'Organisation Identifier', 'License', 'Format', 'Data Identifier']

# Metadata terms to check reusability richness
# terms_reusability_richness = [['availableFormats',''],
#                               ['dataFormat',''],
#                               ['version','relatedDataProducts'],
#                               ['downloadURL',''],
#                               ['paths','spatial'],
#                               ['temporalCoverage','relatedDataProducts'],
#                               ['securityConstraints',''],
#                               ['securityDataStorage',''],
#                               ['securityDataTransfer',''],
#                               ['license',''],
#                               ['privacy','']]
terms_reusability_richness = ['Format', 'Version', 'Download Link', 'Temporal Coverage', 'Spatial Coverage', 'Security', 'License', 'Privacy']


# Metadata terms wich includes controlled vocabularies. More controlled vocabularies can be imlpemented in plugins
# terms_cv=[
#     ['identifiers', 'relatedDataProducts'],
#     ['availableFormats',''],
#     ['temporalCoverage','relatedDataProducts'],
#     ['license',''],
#     ['contactPoints','relatedDataProducts'],
#     ['dataProvider','relatedDataProducts']]
terms_cv = ['Data Identifier', 'Format', 'Temporal Coverage', 'License', 'Person Identifier', 'Organisation Identifier']

#terms that use vocabularies and vocabularies used
dict_vocabularies= {'ROR': 'https://ror.org/', 'PIC': 'https://ec.europa.eu/info/funding-tenders/opportunities/portal/screen/how-to-participate/participant-register', 'imtypes': 'https://www.iana.org/assignments/media-types/media-types.xhtml', 'TRL': 'TRL', 'temporal': 'https://www.iso.org/iso-8601-date-and-time-format.html', 'Rolecode': 'Rolecode', 'spdx': 'https://spdx.org/licenses/', 'ORCID': 'https://orcid.org/'}

# List of data formats that are standard for the community
supported_data_formats = [".txt", ".pdf", ".csv", ".nc", ".doc", ".xls", ".zip", ".rar", ".tar", ".png", ".jpg"]

# Metadata terms that defines links or relation with authors, contributors (preferebly in ORCID format)
terms_qualified_references = ['contributor']

# Metadata terms that defines links or relation with other resources, (preferebly in ORCID format, URIs or persistent identifiers)
# terms_relations = [['contactPoints','relatedDataProducts']]
terms_relations = ['Person Identifier']

# Metadata terms that defines the license type
# terms_license = [['license', ''],]

# Metadata terms that defines metadata about provenance
# terms_provenance =[['curationAndProvenanceObligations','']]

# Accepted access protocols
terms_access_protocols =['http','https','ftp']

# Manual metadata access
metadata_access_manual = ['https://github.com/epos-eu/Hands-On-EPOS-API']

# Manual data access
data_access_manual = ['https://epos-eu.github.io/EPOS-DCAT-AP/v3/#properties-for-catalog-record']

# Data model information
terms_data_model = []

#metadata standard
metadata_standard = ['DCAT']


#Policy of metadata persistence
metadata_persistence = []

#Authentication for EPOS
metadata_authentication = []
